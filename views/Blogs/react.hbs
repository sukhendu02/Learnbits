<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>              Getting started with react: A guide to single page application, advantages and version history.
</title>


    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD" crossorigin="anonymous" />

{{>headerlinks}}
{{>google_adsense}}
<link rel="stylesheet" href="./style.css">
<link rel="stylesheet" href="/nav-foot.css">
<link rel="stylesheet" href="/test.css">
<script src="index.js"></script>

<style>
    @import url('https://fonts.googleapis.com/css2?family=Inter&family=Montserrat:wght@200&family=Nunito+Sans:opsz,wght@6..12,200&family=Open+Sans:wght@500&family=Roboto+Slab&display=swap');

    body {
        background-color: #F5F7FF !important;
    }

    .blog-details {
        font-size: 14px;
    }
 .Intro_to_react_container{
            line-height: 2;
            color: #4d4d4d;
            letter-spacing: 1px;
            font-family: 'Inter';
            padding: 2px;
        }
        .Intro_to_react_container .define_react{
            border-left: 4px solid #64c5bb;
            border-right: 4px solid #64c5bb;
            border-radius: 6px;
            /* background-color: #d7f0ee; */
            padding: 5px 10px; 
        }
        .Intro_to_react_container .react_img_responsive{
            max-width: 100%;
            height: auto;
        }
        .Intro_to_react_container .react_img_container{
           text-align: center;
        }
        .Intro_to_react_container .react_indexing a{
          text-decoration: none;
        }
        .Intro_to_react_container .react_indexing {
            border-left: 4px solid #64c5bb;
            border-radius: 6px;
            background-color: #d7f0ee;
            padding: 4px;
        }

    @media screen and (min-width:991px) {
        #blog-cont {
            width: 80%;
        }

    }
</style>
</head>
<body>
    {{>navbar}}

    <div id="blog-cont" style="font-family: 'Inter'; line-height: 2; letter-spacing: 0.6px; background-color:#fff"
        class="container">
        <div class="blog-header pt-3">
            <h2>              Getting started with react: A guide to single page application, advantages and version history.


            </h2>

            <div class="blog-details text-secondary mt-3">
                <span><i class="fa-solid fa-calendar-days"></i> 2 Sep 2023</span> | <span><i
                        class="fa-solid fa-clock"></i> 5 min read</span> | <span>
                    by Yash Parmar
                </span>
 <p style="background-color:#617CEA ; border-radius:16px;width:fit-content;padding:2px 8px; " class="text-light fw-bold my-3">Coding</p>


            </div>


        </div>
  <div class="img-container text-center my-3">
                  <img style="width: 70%;" class="rounded" src="/blog-img/blog (1).png" alt="img">

  </div>

          <div class="Intro_to_react_container container">
        {{!-- <h2 class="mt-2 mb-4 fw-semibold">Getting Started with ReactJS:  A Step-by-Step Overview</h2> --}}
        <p>Before Getting Started let me give you some insights of what we will be covering in this Blog Post :-</p>
        <div class="react_indexing">
            <p><a href="#what_is_react">What Is React ?</a></p>
            <p><a href="#what_problem_react_solves">What Problem React Solves ?</a></p>
            <p><a href="#what_are_spa">What Are SPA’s ?</a></p>
            <p><a href="#challenges_in_spa">Challenges In Developing A SPA</a></p>
            <p><a href="#react_advantages">React Advantages</a></p>
            <p><a href="#is_react_a_framework">Is React A Framework OR Library ?</a></p>
            <p><a href="#react_version_history">React Version History</a></p>
        </div>

        <!-- ===================================================================================================================================== -->
    
        <h3 id="what_is_react" class="mt-5">➥ What Is React ?</h3>
        <div>
            <p class="define_react">React is <br>
    
                ➡️a JavaScript library — one of the most popular. <br>
                
                ➡️an open-source project created by Facebook. <br>
                
                ➡️used to build user interfaces (UI) on the front end. <br>
                
                ➡️used to build single-page applications(SPAs).
            </p>
        </div>

        <!-- ===================================================================================================================================== -->

        <h3 id="what_problem_react_solves" class="mt-4"> ➥ What Problem React Solves?</h3>

        <p>To get the answer to the above question , have a look at the following web app which is an e-commerce app:</p>

        <div class="react_img_container">
            <img class="react_img_responsive" src="/blog-img/react_pic1.png" alt="">
        </div>

        <p class="mt-2">As with any app of this sort, we have our usual set of pages revolving around a home page, a search results page, a details page, and so on. <br> let’s look at the two approaches we have for building this app.</p>

        <h5 class="mt-4 fw-semibold ">
            The Old School Approach
           ( Multi Page Design )
        </h5>

        <p>
            If we had to build this app a few years ago, we might have taken an approach that involved multiple, individual pages. 
            The flow would have looked something as shown in the below image.
        </p>

        <div class="react_img_container">
            <img class="react_img_responsive" src="/blog-img/react_pic2.png" alt="">
        </div>

        <p  class="mt-4">For almost every action that changes what the browser displays, the web app navigates us to a whole different page. 
           This is a big deal, as it will force the user to wait and the users will see the pages as they get torn down and redrawn.
        </p>
        
        <!-- ========================================  SPA =========================================================================== -->
        
        <h5 class="mt-4 fw-semibold " id="what_are_spa">    
            The New School Approach
            ( Single Page Design )
        </h5>   
        <div>
            <p>
                These days, going with a web app model that requires navigating between individual pages is outdated. <br>
                Its just like having a steam engine in today’s era:
            </p>
            <p>
                Instead, the modern apps in today’s era  follow <b> single-page app (SPA)</b> model. 
            </p>
            <ul>
                <li>This model gives us a world in which we never navigate to different pages or ever even reload a page. </li>
                <li>In this world, the different views of our app are loaded and unloaded into the same page itself.</li>
            </ul>

            <div class="react_img_container">
                <img class="react_img_responsive" src="/blog-img/react_pic3.png" alt="">
            </div>

            <p class="mt-4">
                As users interact with our app, we replace the contents of the <b> dotted red region </b>with the <b> data</b> and <b> HTML</b> that matches what the user is trying to do.  
                The end result is a much more fluid experience. 
                This sort of stuff is simply not possible when navigating to different pages.
            </p>
            <h6 class="mt-4 fw-semibold ">    Real World Examples Of Single Page Design </h6>   
            <p>
                If you’ve ever used popular web apps like Gmail, Instagram, NetFlix, or Youtube, you’ve used a single-page app. 
                In all those apps, the content gets dynamically displayed without requiring you to refresh or navigate to a  different page.
            </p>
        </div>

        <!-- ============================================================================================================================= -->

        <h3 id="challenges_in_spa" class="mt-2">           
            ➥ Challenges In SPA
        </h3>

        <div>
            <P>
                When building single-page apps, we’ll encounter three major issues at some point:
                <ul>
                    <li>Handling Lot Of DOM Manipulation</li>
                    <li>Keeping Data In Sync With The UI</li>
                    <li>Managing the HTML Templates</li>
                </ul>
            </P>
            <h6 class="mt-4 fw-semibold " >Handling Lot Of DOM Manipulation
            </h6>
            <p>In a SPA , lot of DOM manipulation takes place Manipulating the DOM is the primary way you are able to react to user actions and display new content and manually querying elements, adding children , removing subtrees, and performing other DOM operations is one of the slowest things we can do in our browser
                </p>
    
            <h6 class="mt-4 fw-semibold ">Keeping Data In Sync With The UI</h6>
            <p>In a SPA , bulk of our time will go in deciding how to sync data with the UI <br> <b> For example </b>,
                <ul>
                    <li> if a user loads new content, shall we explicitly clear out the search field ? </li>
                    <li>Shall we keep the active tab on a navigation element still visible ?</li>
                    <li>  Which elements shall we keep on the page, and which shall we destroy?</li>
                </ul>            
            </p>
    
            <h6 class="mt-4 fw-semibold ">Managing HTML Templates</h6>
            <p>
                Navigation in a single-page app is nothing more than we dealing with fragments of HTML to represent whatever we want to display. 
                These fragments of HTML are often known as templates, and using JavaScript to manipulate them and fill them out with data gets really complicated .
            </p>
    
            <h6 class="mt-4 fw-semibold ">           
                Facebook Comes To Our Rescue
            </h6>
    
            <p>Facebook decided to solve all these issues for front end developers . <br>
    
    
                Given their huge experience with <b> single-page apps</b>, they released a library called <b> React </b>to not only address these shortcomings, but also change how we think about building single-page apps.
            </p>
        </div>

        <hr style="border-top: 2px solid #5c5c5c;" >
        <!-- ============================================================================================================================== -->
        
        <h3 id="react_advantages" class="mt-2">           
            ➥ React Advantages
        </h3>
        
        <div>
            <p>
                <h6 class="mt-4 fw-semibold ">1) Lightning-Fast DOM Manipulation</h6>
                <ul>
                    <li>Because DOM modifications are really slow, we never modify the DOM directly using React. </li>
                    <li>Instead, we modify an in-memory virtual DOM.</li>
                    <li>Manipulating this virtual DOM is extremely fast, and React takes care of updating the real DOM when the time is right.</li>
                </ul>
                    
                <h6 class="mt-4 fw-semibold ">2) Automatic UI State Management</h6>
                <ul>
                    <li>With single-page apps, keeping track of our UI and maintaining state is hard and also very time consuming. </li>
                    <li>With React, we need to worry about only one thing: the final state of our UI. </li>
                    <li>React takes care of everything else. It figures out what needs to happen to ensure that our UI is represented properly so that all that state-management stuff is no longer our concern.</li>
                </ul>
    
                <h6 class="mt-4 fw-semibold ">3) APIs to Create Truly Composable UI</h6>
                <ul>
                    <li>In React everything is a component</li>
                    <li>Instead of treating the visual elements in our app as one monolithic chunk, React encourages us to break our visual elements into smaller and smaller components</li>
                    <li>Many of React’s core APIs revolve around making it easier to create smaller visual components that can later be composed with other visual components to make larger and more complex visual components</li>
                </ul>
            </p>
            <div class="react_img_container">
                <img class="react_img_responsive" src="/blog-img/react_pic4.png" alt="">
            </div>
        </div>

        <!-- ============================================================================================================================= -->

        <h3 id="is_react_a_framework" class="mt-4">➥ Is React A Library or Framework ?</h3>
        
        <div>
            <p>In some quarters, React is often called a framework because of its behaviour and capabilities. <br>
            <b> But technically, it is a library.</b> <br>
            Unlike some other frameworks like Angular or Ember, we’ll often need to use more libraries with React to form any solution. 
            </p>
     
            <p>Angular, which shares the same purpose as React (to create single-page web apps).  <br>
              What sets it apart is the fact that when we set up an Angular project, it is <b> bootstrapped </b>with nearly every single thing that well need to make a complete, large-scale app.
            </p>
            <p>
                 But that is not the case with React. 
            </p>
            <p>React is a <b>JavaScript library</b>  for building user interfaces. 
             It deals with the views and lets us choose the rest of our front-end architecture.                
             That means, in order to build complete React applications, we will need to choose other libraries and tools on our own.
             </p>
            <p>
                <b> For example :</b> For  a form library, we have to decide whether we want to use the package <b> React Hook Form or Formik</b>. 
                These are both React-specific form libraries to add important features to our forms like validation.
            </p>
            <p>Similarly for making <b> AJAX</b> requests in React , we might choose between the <b> Fetch API or Axios or jQuery AJAX</b>.
                 While in Angular , we have only one option for AJAX and that is using Angular’s service called $http.
            </p>     
        </div>

        <!-- ==================================================================================================================================== -->

        <h3 id="react_version_history" class="mt-4">➥ React Version History</h3>
        <div>
            <p>
                <ol>
                    <li>Facebook created React.js in <b> 2011</b> for their own use under the leadership of <b> Jordan Walke</b></li>
                    <li>In 2013, Facebook made React open-sourced and released the version 0.3.0 </li>
                    <li>In 2015, Netflix announced that it will use React for its app.</li>
                    <li>In 2016, with version 15, React became more stable.</li>
                    <li>As of now its current latest version is 18 , released on March,2022 </li>
                    <li>Today, React is used by many Fortune 500 companies and  Facebook has full-time React development staff.
                    </li>
                </ol>
            </p>
        </div>

        <h6 class="mt-4 fw-semibold ">Conclusion</h6>
        <p>So finally I would say , ReactJS is a powerful library that can totally change the way we build web applications . we have provided you with the brief Step-by-Step overview to get started. Now continue to explore React with continuously practicing the stuffs you learn because everyone knows that practice makes you perfect . Thankyou for joining us in this amazing blog post of getting started with ReactJS , So stay inspired , keep coding and never stop your journey .</p>

    </div>


                 <div class="feedback-box text-center d-flex justify-content-evenly ">
                <div class="section-1 d-flex flex-column">
                        <p class="mb-2">Find this article helpful?</p>
                        <div class="">
  <div class="rating">
      <form class="rating-form">
        <label for="super-happy" class="lb">
          <input
            type="radio"
            name="rating"
            class="super-happy"
            id="super-happy"
            value="super-happy"
          />
          <svg class="svg" viewBox="0 0 24 24">
            <path
              d="M12,17.5C14.33,17.5 16.3,16.04 17.11,14H6.89C7.69,16.04 9.67,17.5 12,17.5M8.5,11A1.5,1.5 0 0,0 10,9.5A1.5,1.5 0 0,0 8.5,8A1.5,1.5 0 0,0 7,9.5A1.5,1.5 0 0,0 8.5,11M15.5,11A1.5,1.5 0 0,0 17,9.5A1.5,1.5 0 0,0 15.5,8A1.5,1.5 0 0,0 14,9.5A1.5,1.5 0 0,0 15.5,11M12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20M12,2C6.47,2 2,6.5 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z"
            ></path>
          </svg>
        </label>
        <label for="neutral" class="lb">
          <input
            type="radio"
            name="rating"
            class="neutral"
            id="neutral"
            value="neutral"
          />
          <svg
            class="svg"
            xmlns="http://www.w3.org/2000/svg"
            xmlns:xlink="http://www.w3.org/1999/xlink"
            version="1.1"
            width="100%"
            height="100%"
            viewBox="0 0 24 24"
          >
            <path
              d="M8.5,11A1.5,1.5 0 0,1 7,9.5A1.5,1.5 0 0,1 8.5,8A1.5,1.5 0 0,1 10,9.5A1.5,1.5 0 0,1 8.5,11M15.5,11A1.5,1.5 0 0,1 14,9.5A1.5,1.5 0 0,1 15.5,8A1.5,1.5 0 0,1 17,9.5A1.5,1.5 0 0,1 15.5,11M12,20A8,8 0 0,0 20,12A8,8 0 0,0 12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22C6.47,22 2,17.5 2,12A10,10 0 0,1 12,2M9,14H15A1,1 0 0,1 16,15A1,1 0 0,1 15,16H9A1,1 0 0,1 8,15A1,1 0 0,1 9,14Z"
            ></path>
          </svg>
        </label>
        <label for="super-sad" class="lb">
          <input
            type="radio"
            name="rating"
            class="super-sad"
            id="super-sad"
            value="super-sad"
          />
          <svg class="svg" viewBox="0 0 24 24">
            <path
              d="M12,2C6.47,2 2,6.47 2,12C2,17.53 6.47,22 12,22A10,10 0 0,0 22,12C22,6.47 17.5,2 12,2M12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20M16.18,7.76L15.12,8.82L14.06,7.76L13,8.82L14.06,9.88L13,10.94L14.06,12L15.12,10.94L16.18,12L17.24,10.94L16.18,9.88L17.24,8.82L16.18,7.76M7.82,12L8.88,10.94L9.94,12L11,10.94L9.94,9.88L11,8.82L9.94,7.76L8.88,8.82L7.82,7.76L6.76,8.82L7.82,9.88L6.76,10.94L7.82,12M12,14C9.67,14 7.69,15.46 6.89,17.5H17.11C16.31,15.46 14.33,14 12,14Z"
            ></path>
          </svg>
        </label>
      </form>
    </div>
                        </div>
                        
                </div>
                <div class="social-icon-container-feedback">
                                <h6 style="color: #617CEA;" class="mb-1">Let us know!</h6>

           <a  target="_blank" href="https://www.instagram.com/learnbits_in">     <i class="fa-brands fa-instagram"></i></a>
                <a target="_blank"  href="https://www.linkedin.com/company/learnbits/"> <i class="fa-brands fa-linkedin"></i></a>
               <a target="_blank"  href="mailto:learnbits01@gmai.com">  <i class="fa-solid fa-envelope"></i></a>


                </div>
        
</div>
    </div>


    {{>Footer}}

    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"
        integrity="sha384-IQsoLXl5PILFhosVNubq5LC7Qb9DXgDA9i+tQ8Zj3iwWAwPtgFTxbJ8NT4GN1R8p"
        crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.min.js"
        integrity="sha384-cVKIPhGWiC2Al4u+LWgxfKTRIcfu0JTxR+EQDz/bgldoEyl4H0zUF0QKbrJ0EcQF"
        crossorigin="anonymous"></script>
</body>

</html>